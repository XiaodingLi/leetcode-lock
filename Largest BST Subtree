/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    class Result{
        int size, low, high;
        public Result(int size, int low, int high){
            this.size = size;
            this.low = low;
            this.high = high;
        }
    }
    int max = 0;
    public int largestBSTSubtree(TreeNode root) {
        if (root == null){
            return 0;
        }
        traverse(root);
        return max;
    }
    public Result traverse(TreeNode root){
        if (root == null){
            return new Result(0, Integer.MAX_VALUE, Integer.MIN_VALUE);
        }
        Result left = traverse(root.left);
        Result right= traverse(root.right);
        if(left.size == -1|| right.size == -1 || root.val <= left.high|| root.val >= right.low){
            return new Result(-1, 0, 0);
        }
        int size = left.size + 1 + right.size;
        max = Math.max(max, size);
        return new Result(size, Math.min(root.val, left.low),Math.max(root.val, right.high));
    }
}
