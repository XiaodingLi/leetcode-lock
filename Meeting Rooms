/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    Comparator<Interval> ic = new Comparator<Interval>(){
        public int compare(Interval a, Interval b){
            if (a.start == b.start){
                return a.end - b.end;
            } else {
                return a.start - b.start;
            }
        }
    };
    public boolean canAttendMeetings(Interval[] intervals) {
        Arrays.sort(intervals, ic);
        for (int i = 1; i < intervals.length; i++){
            if ((intervals[i - 1].start == intervals[i].start) ||(intervals[i - 1].end > intervals[i].start)){
                return false;
            }
        }
        return true;
    }
}
