public class Solution {
     public List<List<Integer>> getFactors(int n) {
        List<List<Integer>> rst = new ArrayList<>();
        if (n <= 3){
            return rst;
        }
        List<Integer> item = new ArrayList<>();
        dfs (rst, item, n, 2);
        return rst;
    }
    private void dfs (List<List<Integer>> rst, List<Integer> item ,int input, int index){
    	if (input <= 1) {
	        if (item.size() > 1) {
	            rst.add(new ArrayList<Integer>(item));
	        }
	        return;
	    }
        for (int i = index; i <= input; i++){
            if (input % i == 0){
                item.add(i);
               // input /= i;  // can't be this way
                dfs(rst, item, input /i, i );// not dfs(rst, item, input /i, index );
                item.remove(item.size() - 1);
            }
        }
    }
}
